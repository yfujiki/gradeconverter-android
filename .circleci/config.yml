version: 2
jobs:
  unit_test:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-28
    steps:
      - checkout
      - restore_cache:
          key: jars-{{checksum "build.gradle"}}-{{checksum "app/build.gradle"}}
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{checksum "build.gradle"}}-{{checksum "app/build.gradle"}}
      - run:
          name: Decrypt keystore
          command: |
            openssl aes-256-cbc -d -in app/signing/Store.key.encrypted -out app/signing/Store.key -k ${DECRYPT_KEY} -md md5
      - run:
          name: Run Compile
          command: ./gradlew assembleDebug
      - run:
          name: Run Tests
          command: ./gradlew test
      - run:
          name: Save Test Results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/junit/ \;
          when: always
      - store_test_results:
          path: ~/junit
      - run:
          name: Run Tests
          command: ./gradlew jacocoTestReport
      - run:
          name: Run Save coverage
          command: |
            curl -s https://codecov.io/bash > .codecov
            chmod +x .codecov
            ./.codecov
      - persist_to_workspace:
          root: .
          paths:
            - .
  ui_test:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-28
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Store Google Service Account
          command: |
            echo $GCLOUD_SERVICE_KEY | base64 --decode > ${HOME}/gcloud-service-key.json
      - run:
          name: Authorize gcloud and set config defaults
          command: |
            sudo gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            sudo gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
      - run:
          name: Decrypt keystore
          command: |
            openssl aes-256-cbc -d -in app/signing/Store.key.encrypted -out app/signing/Store.key -k ${DECRYPT_KEY} -md md5
      - run:
          name: Run Compile
          command: ./gradlew assembleDebugAndroidTest
      - run:
          name: Test with Firebase Test Lab
          command: |
            sudo gcloud firebase test android run \
              test_settings.yml:instrumentation_test \
              --results-bucket cloud-test-${GOOGLE_PROJECT_ID}
      - run:
          name: Install gsutil dependency and copy test results data
          when: always
          command: |
            sudo pip install -U crcmod
            mkdir -p ~/gsutil/
            sudo gsutil -m cp -r -U `sudo gsutil ls gs://cloud-test-${GOOGLE_PROJECT_ID} | tail -1` ~/gsutil/ | true
      - store_artifacts:
          path: ~/gsutil/
      - store_test_results:
          path: ~/gsutil/
  release:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-28
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Store Google Play Android Developer Service Account
          command: echo ${GOOGLE_PLAY_SERVICE_KEY} | base64 --decode > ${HOME}/app/signing/google-play-service-key.json
      - run:
          name: Decrypt keystore
          command: |
            openssl aes-256-cbc -d -in app/signing/Store.key.encrypted -out app/signing/Store.key -k ${DECRYPT_KEY} -md md5
      - run:
          name: Run publishApkRelease
          command: ./gradlew publishApkRelease
workflows:
  version: 2
  deployment_pipeline:
    jobs:
      - unit_test
      - ui_test:
          requires:
            - unit_test
      - release:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
          requires:
            - ui_test
